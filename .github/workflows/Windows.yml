# This is a basic workflow to help you get started with Actions

name: Windows

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Build
    # The type of runner that the job will run on
    runs-on: windows-latest
    strategy:
      matrix:
          qt_ver: [5.10.1,5.12.3]
          qt_target: [desktop]
          qt_arch: [win64_msvc2017_64]
          include:
            - qt_arch: win64_msvc2017_64
              msvc_arch: x64
            - qt_arch: win32_msvc2017
              msvc_arch: x86
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Install Qt
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: jurplel/install-qt-action@v2
        with:
          # Version of Qt to install
          version: ${{ matrix.qt_ver }}
          # Target platform for build
          target: ${{ matrix.qt_target }}
          # Architecture for Windows/Android
          arch: ${{ matrix.qt_arch }}
          
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
          
      - name: build-msvc
        shell: cmd
        env:
          vc_arch: ${{ matrix.msvc_arch }}
          qt_ver:  ${{ matrix.qt_ver }} 
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" %vc_arch%
          qmake -r CONFIG+=ractivated 
          nmake release
          cd src\3rdparty\qt-labs-qtscriptgenerator-%qt_ver%
          qmake -r CONFIG+=ractivated
          nmake release
