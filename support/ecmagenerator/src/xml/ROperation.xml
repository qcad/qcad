<?xml version="1.0"?>
<unit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:rs="http://www.ribbonsoft.com">
  <class_decl name="RDocument" />
  <class_decl name="RExporter" />
  <class name="ROperation"
  xsi:noNamespaceSchemaLocation="../class.xsd" isCopyable="false"
  hasShell="false" sharedPointerSupport="false" isQObject="false"
  hasStreamOperator="false" isAbstract="true" isScriptable="true">
    <baseClass name="RRequireHeap" specifier="public" />
    <baseClass name="RNonCopyable" specifier="private" />
    <constructor>
      <variant>
        <arg type="bool" typeName="bool" name="undoable"
        hasDefault="true" default="true" isConst="false" />
        <arg type="RS::EntityType" typeName="RS::EntityType"
        name="entityTypeFilter" hasDefault="true"
        default="RS :: EntityAll" isConst="false" />
      </variant>
    </constructor>
    <method name="apply" cppName="apply" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="RTransaction" isPureVirtual="true">
        <arg type="RDocument &amp;" typeName="RDocument"
        name="document" isConst="false" />
        <arg type="bool" typeName="bool" name="preview"
        hasDefault="true" default="false" isConst="false" />
      </variant>
    </method>
    <method name="getEntityTypeFilter"
    cppName="getEntityTypeFilter" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="RS::EntityType" isPureVirtual="false" />
    </method>
    <method name="setRecordAffectedObjects"
    cppName="setRecordAffectedObjects" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="on"
        isConst="false" />
      </variant>
    </method>
    <method name="setSpatialIndexDisabled"
    cppName="setSpatialIndexDisabled" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="on"
        isConst="false" />
      </variant>
    </method>
    <method name="setAllowInvisible" cppName="setAllowInvisible"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="on"
        isConst="false" />
      </variant>
    </method>
    <method name="setAllowAll" cppName="setAllowAll"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="on"
        isConst="false" />
      </variant>
    </method>
    <method name="setTransactionGroup"
    cppName="setTransactionGroup" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="int" typeName="int" name="g" isConst="false" />
      </variant>
    </method>
    <method name="getTransactionGroup"
    cppName="getTransactionGroup" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="int" isPureVirtual="false" />
    </method>
    <method name="setText" cppName="setText" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="QString &amp;" typeName="QString" name="t"
        isConst="true" />
      </variant>
    </method>
    <method name="getText" cppName="getText" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="QString" isPureVirtual="false" />
    </method>
    <method name="setTransactionType" cppName="setTransactionType"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="RTransaction::Type"
        typeName="RTransaction::Type" name="t" isConst="false" />
      </variant>
    </method>
    <method name="getTransactionType" cppName="getTransactionType"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="RTransaction::Type"
      isPureVirtual="false" />
    </method>
  </class>
</unit>
