<?xml version="1.0"?>
<unit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:rs="http://www.ribbonsoft.com">
  <class_decl name="RStorage" />
  <class_decl name="RExporter" />
  <class name="RTransaction"
  xsi:noNamespaceSchemaLocation="../class.xsd" isCopyable="true"
  hasShell="false" sharedPointerSupport="false" isQObject="false"
  hasStreamOperator="true" isAbstract="false" isScriptable="true">
    <enum name="Type">
      <value name="Generic" />
      <value name="CurrentLayerChange" />
      <value name="CurrentLayerSelectionChange" />
      <value name="LayerLockStatusChange" />
    </enum>
    <constructor>
      <variant />
      <variant>
        <arg type="RStorage &amp;" typeName="RStorage"
        name="storage" isConst="false" />
      </variant>
      <variant>
        <arg type="RStorage &amp;" typeName="RStorage"
        name="storage" isConst="false" />
        <arg type="int" typeName="int" name="transactionId"
        isConst="false" />
        <arg type="QString &amp;" typeName="QString" name="text"
        isConst="true" />
        <arg type="QList &lt; RObject::Id &gt; &amp;"
        typeName="QList &lt; RObject::Id &gt;"
        name="affectedObjectIds" isConst="true" />
        <arg type="QMap &lt; RObject::Id , QList &lt; RPropertyChange &gt; &gt; &amp;"
        typeName="QMap &lt; RObject::Id , QList &lt; RPropertyChange &gt; &gt;"
        name="propertyChanges" isConst="true" />
      </variant>
      <variant>
        <arg type="RStorage &amp;" typeName="RStorage"
        name="storage" isConst="false" />
        <arg type="QString &amp;" typeName="QString" name="text"
        isConst="true" />
        <arg type="bool" typeName="bool" name="undoable"
        hasDefault="true" default="true" isConst="false" />
      </variant>
    </constructor>
    <method name="setRecordAffectedObjects"
    cppName="setRecordAffectedObjects" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="on"
        isConst="false" />
      </variant>
    </method>
    <method name="setAllowAll" cppName="setAllowAll"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="on"
        isConst="false" />
      </variant>
    </method>
    <method name="setAllowInvisible" cppName="setAllowInvisible"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="on"
        isConst="false" />
      </variant>
    </method>
    <method name="setSpatialIndexDisabled"
    cppName="setSpatialIndexDisabled" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="on"
        isConst="false" />
      </variant>
    </method>
    <method name="setExistingBlockDetectionDisabled"
    cppName="setExistingBlockDetectionDisabled" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="on"
        isConst="false" />
      </variant>
    </method>
    <method name="setExistingLayerDetectionDisabled"
    cppName="setExistingLayerDetectionDisabled" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="on"
        isConst="false" />
      </variant>
    </method>
    <method name="setExistingLinetypeDetectionDisabled"
    cppName="setExistingLinetypeDetectionDisabled"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="on"
        isConst="false" />
      </variant>
    </method>
    <method name="setBlockRecursionDetectionDisabled"
    cppName="setBlockRecursionDetectionDisabled" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="on"
        isConst="false" />
      </variant>
    </method>
    <method name="setKeepHandles" cppName="setKeepHandles"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="on"
        isConst="false" />
      </variant>
    </method>
    <method name="isUndoing" cppName="isUndoing" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="isRedoing" cppName="isRedoing" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="isUndoable" cppName="isUndoable"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="isFailed" cppName="isFailed" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="redo" cppName="redo" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false" />
    </method>
    <method name="undo" cppName="undo" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false" />
    </method>
    <method name="end" cppName="end" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false" />
    </method>
    <method name="updateAffectedBlockReferences"
    cppName="updateAffectedBlockReferences" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false" />
    </method>
    <method name="setId" cppName="setId" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="int" typeName="int" name="id" isConst="false" />
      </variant>
    </method>
    <method name="getId" cppName="getId" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="int" isPureVirtual="false" />
    </method>
    <method name="setGroup" cppName="setGroup" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="int" typeName="int" name="group"
        isConst="false" />
      </variant>
    </method>
    <method name="getGroup" cppName="getGroup" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="int" isPureVirtual="false" />
    </method>
    <method name="getText" cppName="getText" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="QString" isPureVirtual="false" />
    </method>
    <method name="overwriteBlock" cppName="overwriteBlock"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false">
        <arg type="QSharedPointer &lt; RBlock &gt;"
        typeName="QSharedPointer &lt; RBlock &gt;" name="block"
        isConst="false" />
      </variant>
    </method>
    <method name="addObject" cppName="addObject" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false">
        <arg type="QSharedPointer &lt; RObject &gt;"
        typeName="QSharedPointer &lt; RObject &gt;" name="obj"
        isConst="false" />
        <arg type="bool" typeName="bool"
        name="useCurrentAttributes" hasDefault="true"
        default="true" isConst="false" />
        <arg type="bool" typeName="bool" name="forceNew"
        hasDefault="true" default="false" isConst="false" />
        <arg type="QSet &lt; RPropertyTypeId &gt; &amp;"
        typeName="QSet &lt; RPropertyTypeId &gt;"
        name="modifiedPropertyTypeIds" hasDefault="true"
        default="RDEFAULT_QSET_RPROPERTYTYPEID" isConst="true" />
      </variant>
    </method>
    <method name="addAffectedObject" cppName="addAffectedObject"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="RObject::Id" typeName="RObject::Id"
        name="objectId" isConst="false" />
      </variant>
      <variant returnType="void" isPureVirtual="false">
        <arg type="QSharedPointer &lt; RObject &gt;"
        typeName="QSharedPointer &lt; RObject &gt;" name="object"
        isConst="false" />
      </variant>
    </method>
    <method name="addAffectedObjects" cppName="addAffectedObjects"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="QSet &lt; RObject::Id &gt; &amp;"
        typeName="QSet &lt; RObject::Id &gt;" name="objectIds"
        isConst="true" />
      </variant>
    </method>
    <method name="deleteObject" cppName="deleteObject"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="RObject::Id" typeName="RObject::Id"
        name="objectId" isConst="false" />
        <arg type="bool" typeName="bool" name="force"
        hasDefault="true" default="false" isConst="false" />
      </variant>
      <variant returnType="void" isPureVirtual="false">
        <arg type="QSharedPointer &lt; RObject &gt;"
        typeName="QSharedPointer &lt; RObject &gt;" name="object"
        isConst="false" />
        <arg type="bool" typeName="bool" name="force"
        hasDefault="true" default="false" isConst="false" />
      </variant>
    </method>
    <method name="getAffectedObjects" cppName="getAffectedObjects"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="QList &lt; RObject::Id &gt;"
      isPureVirtual="false" />
    </method>
    <method name="getStatusChanges" cppName="getStatusChanges"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="QSet &lt; RObject::Id &gt;"
      isPureVirtual="false" />
    </method>
    <method name="hasStatusChange" cppName="hasStatusChange"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false">
        <arg type="RObject::Id" typeName="RObject::Id" name="id"
        isConst="false" />
      </variant>
    </method>
    <method name="getPropertyChanges" cppName="getPropertyChanges"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="QMap &lt; RObject::Id , QList &lt; RPropertyChange &gt; &gt;"
      isPureVirtual="false" />
      <variant returnType="QList &lt; RPropertyChange &gt;"
      isPureVirtual="false">
        <arg type="RObject::Id" typeName="RObject::Id" name="id"
        isConst="false" />
      </variant>
    </method>
    <method name="hasOnlyChanges" cppName="hasOnlyChanges"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="fail" cppName="fail" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false" />
    </method>
    <method name="endCycle" cppName="endCycle" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false" />
    </method>
    <method name="isPreview" cppName="isPreview" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="getType" cppName="getType" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="RTransaction::Type"
      isPureVirtual="false" />
    </method>
    <method name="setType" cppName="setType" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="RTransaction::Type"
        typeName="RTransaction::Type" name="t" isConst="false" />
      </variant>
    </method>
    <method name="addPropertyChange" cppName="addPropertyChange"
    specifier="protected" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false">
        <arg type="RObject::Id" typeName="RObject::Id"
        name="objectId" isConst="false" />
        <arg type="RPropertyChange &amp;"
        typeName="RPropertyChange" name="propertyChange"
        isConst="true" />
      </variant>
    </method>
    <method name="commit" cppName="commit" specifier="protected"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false" />
    </method>
    <method name="rollback" cppName="rollback"
    specifier="protected" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false" />
    </method>
  </class>
</unit>
