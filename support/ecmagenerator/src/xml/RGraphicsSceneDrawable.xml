<?xml version="1.0"?>
<unit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:rs="http://www.ribbonsoft.com">
  <class name="RGraphicsSceneDrawable"
  xsi:noNamespaceSchemaLocation="../class.xsd" isCopyable="true"
  hasShell="false" sharedPointerSupport="false" isQObject="false"
  hasStreamOperator="true" isAbstract="false" isScriptable="true">
    <enum name="Type">
      <value name="Invalid" />
      <value name="PainterPath" />
      <value name="PainterPathRay" />
      <value name="PainterPathXLine" />
      <value name="Image" />
      <value name="Text" />
      <value name="Transform" />
      <value name="EndTransform" />
    </enum>
    <enum name="Mode">
      <value name="NoMode" />
      <value name="NoPlot" />
      <value name="PixelUnit" />
    </enum>
    <constructor>
      <variant />
      <variant>
        <arg type="RGraphicsSceneDrawable &amp;"
        typeName="RGraphicsSceneDrawable" name="other"
        isConst="true" />
      </variant>
    </constructor>
    <method name="createFromPainterPath"
    cppName="createFromPainterPath" specifier="public"
    isStatic="true" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="RGraphicsSceneDrawable"
      isPureVirtual="false">
        <arg type="RPainterPath &amp;" typeName="RPainterPath"
        name="pp" isConst="true" />
        <arg type="RVector &amp;" typeName="RVector" name="offset"
        hasDefault="true" default="RVector :: nullVector"
        isConst="true" />
      </variant>
    </method>
    <method name="createFromImage" cppName="createFromImage"
    specifier="public" isStatic="true" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="RGraphicsSceneDrawable"
      isPureVirtual="false">
        <arg type="RImageData &amp;" typeName="RImageData"
        name="img" isConst="true" />
        <arg type="RVector &amp;" typeName="RVector" name="offset"
        hasDefault="true" default="RVector :: nullVector"
        isConst="true" />
      </variant>
    </method>
    <method name="createFromText" cppName="createFromText"
    specifier="public" isStatic="true" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="RGraphicsSceneDrawable"
      isPureVirtual="false">
        <arg type="RTextBasedData &amp;" typeName="RTextBasedData"
        name="txt" isConst="true" />
        <arg type="RVector &amp;" typeName="RVector" name="offset"
        hasDefault="true" default="RVector :: nullVector"
        isConst="true" />
      </variant>
    </method>
    <method name="createFromTransform"
    cppName="createFromTransform" specifier="public"
    isStatic="true" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="RGraphicsSceneDrawable"
      isPureVirtual="false">
        <arg type="RTransform &amp;" typeName="RTransform"
        name="transfrom" isConst="true" />
        <arg type="RVector &amp;" typeName="RVector" name="offset"
        hasDefault="true" default="RVector :: nullVector"
        isConst="true" />
      </variant>
    </method>
    <method name="createEndTransform" cppName="createEndTransform"
    specifier="public" isStatic="true" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="RGraphicsSceneDrawable"
      isPureVirtual="false">
        <arg type="RVector &amp;" typeName="RVector" name="offset"
        isConst="true" />
      </variant>
    </method>
    <method name="uninit" cppName="uninit" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false" />
    </method>
    <method name="getType" cppName="getType" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="RGraphicsSceneDrawable::Type"
      isPureVirtual="false" />
    </method>
    <method name="isPainterPath" cppName="isPainterPath"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="isText" cppName="isText" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="isImage" cppName="isImage" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="setMode" cppName="setMode" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="RGraphicsSceneDrawable::Mode"
        typeName="RGraphicsSceneDrawable::Mode" name="mode"
        isConst="false" />
        <arg type="bool" typeName="bool" name="on"
        hasDefault="true" default="true" isConst="false" />
      </variant>
    </method>
    <method name="getMode" cppName="getMode" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false">
        <arg type="RGraphicsSceneDrawable::Mode"
        typeName="RGraphicsSceneDrawable::Mode" name="mode"
        isConst="false" />
      </variant>
    </method>
    <method name="setNoPlot" cppName="setNoPlot" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="on"
        isConst="false" />
      </variant>
    </method>
    <method name="getNoPlot" cppName="getNoPlot" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="setPixelUnit" cppName="setPixelUnit"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="on"
        isConst="false" />
      </variant>
    </method>
    <method name="getPixelUnit" cppName="getPixelUnit"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="getPainterPath" cppName="getPainterPath"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="RPainterPath &amp;"
      isPureVirtual="false" />
    </method>
    <method name="getImage" cppName="getImage" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="RImageData &amp;"
      isPureVirtual="false" />
    </method>
    <method name="getText" cppName="getText" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="RTextBasedData &amp;"
      isPureVirtual="false" />
    </method>
    <method name="getTransform" cppName="getTransform"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="RTransform &amp;"
      isPureVirtual="false" />
    </method>
    <method name="getOffset" cppName="getOffset" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="RVector" isPureVirtual="false" />
    </method>
    <method name="setOffset" cppName="setOffset" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="RVector &amp;" typeName="RVector" name="o"
        isConst="true" />
      </variant>
    </method>
    <method name="getDocument" cppName="getDocument"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="RDocument *" isPureVirtual="false" />
    </method>
    <method name="setSelected" cppName="setSelected"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="on"
        isConst="false" />
      </variant>
    </method>
    <method name="setHighlighted" cppName="setHighlighted"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="on"
        isConst="false" />
      </variant>
    </method>
    <method name="operator=" cppName="operator=" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="RGraphicsSceneDrawable &amp;"
      isPureVirtual="false">
        <arg type="RGraphicsSceneDrawable &amp;"
        typeName="RGraphicsSceneDrawable" name="other"
        isConst="true" />
      </variant>
    </method>
  </class>
</unit>
