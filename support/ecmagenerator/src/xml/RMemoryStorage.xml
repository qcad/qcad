<?xml version="1.0"?>
<unit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:rs="http://www.ribbonsoft.com">
  <class name="RMemoryStorage"
  xsi:noNamespaceSchemaLocation="../class.xsd" isCopyable="false"
  hasShell="false" sharedPointerSupport="false" isQObject="false"
  hasStreamOperator="false" isAbstract="false" isScriptable="true">
    <baseClass name="RStorage" specifier="public" />
    <constructor>
      <variant />
    </constructor>
    <method name="clear" cppName="clear" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false" />
    </method>
    <method name="setCurrentBlock" cppName="setCurrentBlock"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="RBlock::Id" typeName="RBlock::Id" name="blockId"
        isConst="false" />
      </variant>
    </method>
    <method name="beginTransaction" cppName="beginTransaction"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false" />
    </method>
    <method name="commitTransaction" cppName="commitTransaction"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false" />
    </method>
    <method name="rollbackTransaction"
    cppName="rollbackTransaction" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false" />
    </method>
    <method name="queryAllObjects" cppName="queryAllObjects"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QSet &lt; RObject::Id &gt;"
      isPureVirtual="false" />
    </method>
    <method name="querySelectedLayers"
    cppName="querySelectedLayers" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="QSet &lt; RObject::Id &gt;"
      isPureVirtual="false" />
    </method>
    <method name="queryAllVisibleEntities"
    cppName="queryAllVisibleEntities" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="QSet &lt; REntity::Id &gt;"
      isPureVirtual="false" />
    </method>
    <method name="queryAllEntities" cppName="queryAllEntities"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QSet &lt; REntity::Id &gt;"
      isPureVirtual="false">
        <arg type="bool" typeName="bool" name="undone"
        hasDefault="true" default="false" isConst="false" />
        <arg type="bool" typeName="bool" name="allBlocks"
        hasDefault="true" default="false" isConst="false" />
        <arg type="RS::EntityType" typeName="RS::EntityType"
        name="type" hasDefault="true" default="RS :: EntityAll"
        isConst="false" />
      </variant>
      <variant returnType="QSet &lt; REntity::Id &gt;"
      isPureVirtual="false">
        <arg type="bool" typeName="bool" name="undone"
        isConst="false" />
        <arg type="bool" typeName="bool" name="allBlocks"
        isConst="false" />
        <arg type="QList &lt; RS::EntityType &gt;"
        typeName="QList &lt; RS::EntityType &gt;" name="types"
        isConst="false" />
      </variant>
    </method>
    <method name="queryWorkingSetEntities"
    cppName="queryWorkingSetEntities" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="QSet &lt; REntity::Id &gt;"
      isPureVirtual="false" />
    </method>
    <method name="queryAllUcs" cppName="queryAllUcs"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QSet &lt; RUcs::Id &gt;"
      isPureVirtual="false" />
    </method>
    <method name="queryAllLayers" cppName="queryAllLayers"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QSet &lt; RLayer::Id &gt;"
      isPureVirtual="false">
        <arg type="bool" typeName="bool" name="undone"
        hasDefault="true" default="false" isConst="false" />
      </variant>
    </method>
    <method name="queryAllLayerStates"
    cppName="queryAllLayerStates" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="QSet &lt; RLayerState::Id &gt;"
      isPureVirtual="false">
        <arg type="bool" typeName="bool" name="undone"
        hasDefault="true" default="false" isConst="false" />
      </variant>
    </method>
    <method name="queryAllBlocks" cppName="queryAllBlocks"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QSet &lt; RBlock::Id &gt;"
      isPureVirtual="false">
        <arg type="bool" typeName="bool" name="undone"
        hasDefault="true" default="false" isConst="false" />
      </variant>
    </method>
    <method name="queryAllLayoutBlocks"
    cppName="queryAllLayoutBlocks" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="QSet &lt; RBlock::Id &gt;"
      isPureVirtual="false">
        <arg type="bool" typeName="bool" name="includeModelSpace"
        hasDefault="true" default="false" isConst="false" />
        <arg type="bool" typeName="bool" name="undone"
        hasDefault="true" default="false" isConst="false" />
      </variant>
    </method>
    <method name="queryAllLayouts" cppName="queryAllLayouts"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QSet &lt; RBlock::Id &gt;"
      isPureVirtual="false">
        <arg type="bool" typeName="bool" name="undone"
        isConst="false" />
      </variant>
    </method>
    <method name="queryAllViews" cppName="queryAllViews"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QSet &lt; RView::Id &gt;"
      isPureVirtual="false">
        <arg type="bool" typeName="bool" name="undone"
        hasDefault="true" default="false" isConst="false" />
      </variant>
    </method>
    <method name="queryAllLinetypes" cppName="queryAllLinetypes"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QSet &lt; RLinetype::Id &gt;"
      isPureVirtual="false" />
    </method>
    <method name="queryInfiniteEntities"
    cppName="queryInfiniteEntities" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="QSet &lt; REntity::Id &gt;"
      isPureVirtual="false" />
    </method>
    <method name="querySelectedEntities"
    cppName="querySelectedEntities" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="QSet &lt; REntity::Id &gt;"
      isPureVirtual="false" />
    </method>
    <method name="queryLayerEntities" cppName="queryLayerEntities"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QSet &lt; REntity::Id &gt;"
      isPureVirtual="false">
        <arg type="RLayer::Id" typeName="RLayer::Id" name="layerId"
        isConst="false" />
        <arg type="bool" typeName="bool" name="allBlocks"
        hasDefault="true" default="false" isConst="false" />
      </variant>
    </method>
    <method name="hasBlockEntities" cppName="hasBlockEntities"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false">
        <arg type="RBlock::Id" typeName="RBlock::Id" name="blockId"
        isConst="false" />
      </variant>
    </method>
    <method name="queryBlockEntities" cppName="queryBlockEntities"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QSet &lt; REntity::Id &gt;"
      isPureVirtual="false">
        <arg type="RBlock::Id" typeName="RBlock::Id" name="blockId"
        isConst="false" />
      </variant>
    </method>
    <method name="queryLayerBlockEntities"
    cppName="queryLayerBlockEntities" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="QSet &lt; REntity::Id &gt;"
      isPureVirtual="false">
        <arg type="RLayer::Id" typeName="RLayer::Id" name="layerId"
        isConst="false" />
        <arg type="RBlock::Id" typeName="RBlock::Id" name="blockId"
        isConst="false" />
      </variant>
    </method>
    <method name="queryChildEntities" cppName="queryChildEntities"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QSet &lt; REntity::Id &gt;"
      isPureVirtual="false">
        <arg type="REntity::Id" typeName="REntity::Id"
        name="parentId" isConst="false" />
        <arg type="RS::EntityType" typeName="RS::EntityType"
        name="type" hasDefault="true" default="RS :: EntityAll"
        isConst="false" />
      </variant>
    </method>
    <method name="hasChildEntities" cppName="hasChildEntities"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false">
        <arg type="REntity::Id" typeName="REntity::Id"
        name="parentId" isConst="false" />
      </variant>
    </method>
    <method name="queryBlockReferences"
    cppName="queryBlockReferences" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="QSet &lt; REntity::Id &gt;"
      isPureVirtual="false">
        <arg type="RBlock::Id" typeName="RBlock::Id" name="blockId"
        isConst="false" />
      </variant>
    </method>
    <method name="queryAllBlockReferences"
    cppName="queryAllBlockReferences" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="QSet &lt; REntity::Id &gt;"
      isPureVirtual="false" />
    </method>
    <method name="queryDocumentVariables"
    cppName="queryDocumentVariables" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="QSharedPointer &lt; RDocumentVariables &gt;"
      isPureVirtual="false" />
    </method>
    <method name="queryDocumentVariablesDirect"
    cppName="queryDocumentVariablesDirect" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="QSharedPointer &lt; RDocumentVariables &gt;"
      isPureVirtual="false" />
    </method>
    <method name="queryObject" cppName="queryObject"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QSharedPointer &lt; RObject &gt;"
      isPureVirtual="false">
        <arg type="RObject::Id" typeName="RObject::Id"
        name="objectId" isConst="false" />
      </variant>
    </method>
    <method name="queryObjectByHandle"
    cppName="queryObjectByHandle" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="QSharedPointer &lt; RObject &gt;"
      isPureVirtual="false">
        <arg type="RObject::Handle" typeName="RObject::Handle"
        name="objectHandle" isConst="false" />
      </variant>
    </method>
    <method name="queryObjectByHandleDirect"
    cppName="queryObjectByHandleDirect" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="QSharedPointer &lt; RObject &gt;"
      isPureVirtual="false">
        <arg type="RObject::Handle" typeName="RObject::Handle"
        name="objectHandle" isConst="false" />
      </variant>
    </method>
    <method name="queryEntity" cppName="queryEntity"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QSharedPointer &lt; REntity &gt;"
      isPureVirtual="false">
        <arg type="REntity::Id" typeName="REntity::Id"
        name="objectId" isConst="false" />
      </variant>
    </method>
    <method name="queryLayer" cppName="queryLayer"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QSharedPointer &lt; RLayer &gt;"
      isPureVirtual="false">
        <arg type="RLayer::Id" typeName="RLayer::Id" name="layerId"
        isConst="false" />
      </variant>
      <variant returnType="QSharedPointer &lt; RLayer &gt;"
      isPureVirtual="false">
        <arg type="QString &amp;" typeName="QString"
        name="layerName" isConst="true" />
      </variant>
    </method>
    <method name="queryLayerState" cppName="queryLayerState"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QSharedPointer &lt; RLayerState &gt;"
      isPureVirtual="false">
        <arg type="RLayerState::Id" typeName="RLayerState::Id"
        name="layerStateId" isConst="false" />
      </variant>
      <variant returnType="QSharedPointer &lt; RLayerState &gt;"
      isPureVirtual="false">
        <arg type="QString &amp;" typeName="QString"
        name="layerStateName" isConst="true" />
      </variant>
    </method>
    <method name="queryLayout" cppName="queryLayout"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QSharedPointer &lt; RLayout &gt;"
      isPureVirtual="false">
        <arg type="RLayout::Id" typeName="RLayout::Id"
        name="layoutId" isConst="false" />
      </variant>
      <variant returnType="QSharedPointer &lt; RLayout &gt;"
      isPureVirtual="false">
        <arg type="QString &amp;" typeName="QString"
        name="layoutName" isConst="true" />
      </variant>
    </method>
    <method name="queryBlock" cppName="queryBlock"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QSharedPointer &lt; RBlock &gt;"
      isPureVirtual="false">
        <arg type="RBlock::Id" typeName="RBlock::Id" name="blockId"
        isConst="false" />
      </variant>
      <variant returnType="QSharedPointer &lt; RBlock &gt;"
      isPureVirtual="false">
        <arg type="QString &amp;" typeName="QString"
        name="blockName" isConst="true" />
      </variant>
    </method>
    <method name="queryBlockDirect" cppName="queryBlockDirect"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QSharedPointer &lt; RBlock &gt;"
      isPureVirtual="false">
        <arg type="QString &amp;" typeName="QString"
        name="blockName" isConst="true" />
      </variant>
      <variant returnType="QSharedPointer &lt; RBlock &gt;"
      isPureVirtual="false">
        <arg type="RBlock::Id" typeName="RBlock::Id" name="blockId"
        isConst="false" />
      </variant>
    </method>
    <method name="queryView" cppName="queryView" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="QSharedPointer &lt; RView &gt;"
      isPureVirtual="false">
        <arg type="RView::Id" typeName="RView::Id" name="viewId"
        isConst="false" />
      </variant>
      <variant returnType="QSharedPointer &lt; RView &gt;"
      isPureVirtual="false">
        <arg type="QString &amp;" typeName="QString"
        name="viewName" isConst="true" />
      </variant>
    </method>
    <method name="queryUcs" cppName="queryUcs" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="QSharedPointer &lt; RUcs &gt;"
      isPureVirtual="false">
        <arg type="RUcs::Id" typeName="RUcs::Id" name="ucsId"
        isConst="false" />
      </variant>
      <variant returnType="QSharedPointer &lt; RUcs &gt;"
      isPureVirtual="false">
        <arg type="QString &amp;" typeName="QString" name="ucsName"
        isConst="true" />
      </variant>
    </method>
    <method name="queryLinetypeDirect"
    cppName="queryLinetypeDirect" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="QSharedPointer &lt; RLinetype &gt;"
      isPureVirtual="false">
        <arg type="RLinetype::Id" typeName="RLinetype::Id"
        name="linetypeId" isConst="false" />
      </variant>
    </method>
    <method name="queryLinetype" cppName="queryLinetype"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QSharedPointer &lt; RLinetype &gt;"
      isPureVirtual="false">
        <arg type="RLinetype::Id" typeName="RLinetype::Id"
        name="linetypeId" isConst="false" />
      </variant>
      <variant returnType="QSharedPointer &lt; RLinetype &gt;"
      isPureVirtual="false">
        <arg type="QString &amp;" typeName="QString"
        name="linetypeName" isConst="true" />
      </variant>
    </method>
    <method name="clearVisibleCache" cppName="clearVisibleCache"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false" />
    </method>
    <method name="updateVisibleCache" cppName="updateVisibleCache"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false" />
    </method>
    <method name="clearSelectionCache"
    cppName="clearSelectionCache" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false" />
    </method>
    <method name="updateSelectedEntityMap"
    cppName="updateSelectedEntityMap" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false" />
    </method>
    <method name="updateSelectedLayerMap"
    cppName="updateSelectedLayerMap" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false" />
    </method>
    <method name="countSelectedEntities"
    cppName="countSelectedEntities" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="int" isPureVirtual="false" />
    </method>
    <method name="clearEntitySelection"
    cppName="clearEntitySelection" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="QSet &lt; REntity::Id &gt; *"
        typeName="QSet &lt; REntity::Id &gt; *"
        name="affectedEntities" hasDefault="true" default="NULL"
        isConst="false" />
      </variant>
    </method>
    <method name="selectAllEntities" cppName="selectAllEntities"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="QSet &lt; REntity::Id &gt; *"
        typeName="QSet &lt; REntity::Id &gt; *"
        name="affectedEntities" hasDefault="true" default="NULL"
        isConst="false" />
      </variant>
    </method>
    <method name="selectEntity" cppName="selectEntity"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="REntity::Id" typeName="REntity::Id"
        name="entityId" isConst="false" />
        <arg type="bool" typeName="bool" name="add"
        hasDefault="true" default="false" isConst="false" />
        <arg type="QSet &lt; REntity::Id &gt; *"
        typeName="QSet &lt; REntity::Id &gt; *"
        name="affectedEntities" hasDefault="true" default="NULL"
        isConst="false" />
      </variant>
    </method>
    <method name="deselectEntity" cppName="deselectEntity"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="REntity::Id" typeName="REntity::Id"
        name="entityId" isConst="false" />
        <arg type="QSet &lt; REntity::Id &gt; *"
        typeName="QSet &lt; REntity::Id &gt; *"
        name="affectedEntities" hasDefault="true" default="NULL"
        isConst="false" />
      </variant>
    </method>
    <method name="selectEntities" cppName="selectEntities"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="int" isPureVirtual="false">
        <arg type="QSet &lt; REntity::Id &gt; &amp;"
        typeName="QSet &lt; REntity::Id &gt;" name="entityIds"
        isConst="true" />
        <arg type="bool" typeName="bool" name="add"
        hasDefault="true" default="false" isConst="false" />
        <arg type="QSet &lt; REntity::Id &gt; *"
        typeName="QSet &lt; REntity::Id &gt; *"
        name="affectedEntities" hasDefault="true" default="NULL"
        isConst="false" />
      </variant>
    </method>
    <method name="deselectEntities" cppName="deselectEntities"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="int" isPureVirtual="false">
        <arg type="QSet &lt; REntity::Id &gt; &amp;"
        typeName="QSet &lt; REntity::Id &gt;" name="entityIds"
        isConst="true" />
        <arg type="QSet &lt; REntity::Id &gt; *"
        typeName="QSet &lt; REntity::Id &gt; *"
        name="affectedEntities" hasDefault="true" default="NULL"
        isConst="false" />
      </variant>
    </method>
    <method name="setEntitySelected" cppName="setEntitySelected"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="QSharedPointer &lt; REntity &gt;"
        typeName="QSharedPointer &lt; REntity &gt;" name="entity"
        isConst="false" />
        <arg type="bool" typeName="bool" name="on"
        isConst="false" />
        <arg type="QSet &lt; REntity::Id &gt; *"
        typeName="QSet &lt; REntity::Id &gt; *"
        name="affectedEntities" hasDefault="true" default="NULL"
        isConst="false" />
        <arg type="bool" typeName="bool" name="onlyDescend"
        hasDefault="true" default="false" isConst="false" />
      </variant>
    </method>
    <method name="isSelected" cppName="isSelected"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false">
        <arg type="REntity::Id" typeName="REntity::Id"
        name="entityId" isConst="false" />
      </variant>
    </method>
    <method name="isSelectedWorkingSet"
    cppName="isSelectedWorkingSet" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false">
        <arg type="REntity::Id" typeName="REntity::Id"
        name="entityId" isConst="false" />
      </variant>
    </method>
    <method name="isEntityVisible" cppName="isEntityVisible"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false">
        <arg type="REntity &amp;" typeName="REntity" name="entity"
        isConst="true" />
      </variant>
    </method>
    <method name="hasSelection" cppName="hasSelection"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="getBoundingBox" cppName="getBoundingBox"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="RBox" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="ignoreHiddenLayers"
        hasDefault="true" default="true" isConst="false" />
        <arg type="bool" typeName="bool" name="ignoreEmpty"
        hasDefault="true" default="false" isConst="false" />
      </variant>
    </method>
    <method name="getSelectionBox" cppName="getSelectionBox"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="RBox" isPureVirtual="false" />
    </method>
    <method name="getEntitiesBox" cppName="getEntitiesBox"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="RBox" isPureVirtual="false">
        <arg type="QSet &lt; REntity::Id &gt; &amp;"
        typeName="QSet &lt; REntity::Id &gt;" name="ids"
        isConst="false" />
      </variant>
    </method>
    <method name="removeObject" cppName="removeObject"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false">
        <arg type="QSharedPointer &lt; RObject &gt;"
        typeName="QSharedPointer &lt; RObject &gt;" name="object"
        isConst="false" />
      </variant>
    </method>
    <method name="saveObject" cppName="saveObject"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false">
        <arg type="QSharedPointer &lt; RObject &gt;"
        typeName="QSharedPointer &lt; RObject &gt;" name="object"
        isConst="false" />
        <arg type="bool" typeName="bool" name="checkBlockRecursion"
        hasDefault="true" default="true" isConst="false" />
        <arg type="bool" typeName="bool" name="keepHandles"
        hasDefault="true" default="false" isConst="false" />
      </variant>
    </method>
    <method name="checkRecursion" cppName="checkRecursion"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false">
        <arg type="RBlock::Id" typeName="RBlock::Id" name="blockId"
        isConst="false" />
        <arg type="RBlock::Id" typeName="RBlock::Id"
        name="potentialChildBlockId" isConst="false" />
      </variant>
    </method>
    <method name="deleteObject" cppName="deleteObject"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false">
        <arg type="RObject::Id" typeName="RObject::Id"
        name="objectId" isConst="false" />
      </variant>
    </method>
    <method name="saveTransaction" cppName="saveTransaction"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="RTransaction &amp;" typeName="RTransaction"
        name="transaction" isConst="false" />
      </variant>
    </method>
    <method name="deleteTransactionsFrom"
    cppName="deleteTransactionsFrom" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="int" typeName="int" name="transactionId"
        isConst="false" />
      </variant>
    </method>
    <method name="getTransaction" cppName="getTransaction"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="RTransaction" isPureVirtual="false">
        <arg type="int" typeName="int" name="transactionId"
        isConst="false" />
      </variant>
    </method>
    <method name="resetTransactionStack"
    cppName="resetTransactionStack" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false" />
    </method>
    <method name="toggleUndoStatus" cppName="toggleUndoStatus"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="QSet &lt; RObject::Id &gt; &amp;"
        typeName="QSet &lt; RObject::Id &gt;" name="objects"
        isConst="false" />
      </variant>
      <variant returnType="void" isPureVirtual="false">
        <arg type="RObject::Id" typeName="RObject::Id"
        name="object" isConst="false" />
      </variant>
    </method>
    <method name="setUndoStatus" cppName="setUndoStatus"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false">
        <arg type="RObject::Id" typeName="RObject::Id"
        name="objectId" isConst="false" />
        <arg type="bool" typeName="bool" name="status"
        isConst="false" />
      </variant>
      <variant returnType="void" isPureVirtual="false">
        <arg type="RObject &amp;" typeName="RObject" name="object"
        isConst="false" />
        <arg type="bool" typeName="bool" name="status"
        isConst="false" />
      </variant>
    </method>
    <method name="getMaxTransactionId"
    cppName="getMaxTransactionId" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="int" isPureVirtual="false" />
    </method>
    <method name="getVariables" cppName="getVariables"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QStringList" isPureVirtual="false" />
    </method>
    <method name="setVariable" cppName="setVariable"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="QString &amp;" typeName="QString" name="key"
        isConst="true" />
        <arg type="QVariant &amp;" typeName="QVariant" name="value"
        isConst="true" />
        <arg type="bool" typeName="bool" name="overwrite"
        hasDefault="true" default="true" isConst="false" />
      </variant>
    </method>
    <method name="getVariable" cppName="getVariable"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QVariant" isPureVirtual="false">
        <arg type="QString &amp;" typeName="QString" name="key"
        isConst="true" />
      </variant>
    </method>
    <method name="removeVariable" cppName="removeVariable"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="QString &amp;" typeName="QString" name="key"
        isConst="true" />
      </variant>
    </method>
    <method name="setKnownVariable" cppName="setKnownVariable"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="RS::KnownVariable" typeName="RS::KnownVariable"
        name="key" isConst="false" />
        <arg type="QVariant &amp;" typeName="QVariant" name="value"
        isConst="true" />
        <arg type="RTransaction *" typeName="RTransaction *"
        name="transaction" hasDefault="true" default="NULL"
        isConst="false" />
      </variant>
    </method>
    <method name="getKnownVariable" cppName="getKnownVariable"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QVariant" isPureVirtual="false">
        <arg type="RS::KnownVariable" typeName="RS::KnownVariable"
        name="key" isConst="false" />
      </variant>
    </method>
    <method name="getLayerName" cppName="getLayerName"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QString" isPureVirtual="false">
        <arg type="RLayer::Id" typeName="RLayer::Id" name="layerId"
        isConst="false" />
      </variant>
    </method>
    <method name="getLayerNames" cppName="getLayerNames"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QSet &lt; QString &gt;"
      isPureVirtual="false">
        <arg type="QString &amp;" typeName="QString" name="rxStr"
        hasDefault="true" default="RDEFAULT_QSTRING"
        isConst="true" />
      </variant>
    </method>
    <method name="getLayerId" cppName="getLayerId"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="RLayer::Id" isPureVirtual="false">
        <arg type="QString &amp;" typeName="QString"
        name="layerName" isConst="true" />
      </variant>
    </method>
    <method name="getLayerStateName" cppName="getLayerStateName"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QString" isPureVirtual="false">
        <arg type="RLayerState::Id" typeName="RLayerState::Id"
        name="layerStateId" isConst="false" />
      </variant>
    </method>
    <method name="getLayerStateNames" cppName="getLayerStateNames"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QSet &lt; QString &gt;"
      isPureVirtual="false">
        <arg type="QString &amp;" typeName="QString" name="rxStr"
        hasDefault="true" default="RDEFAULT_QSTRING"
        isConst="true" />
      </variant>
    </method>
    <method name="getLayerStateId" cppName="getLayerStateId"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="RLayerState::Id" isPureVirtual="false">
        <arg type="QString &amp;" typeName="QString"
        name="layerStateName" isConst="true" />
      </variant>
    </method>
    <method name="getLayoutName" cppName="getLayoutName"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QString" isPureVirtual="false">
        <arg type="RLayout::Id" typeName="RLayout::Id"
        name="layoutId" isConst="false" />
      </variant>
    </method>
    <method name="getLayoutNames" cppName="getLayoutNames"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QSet &lt; QString &gt;"
      isPureVirtual="false">
        <arg type="QString &amp;" typeName="QString" name="rxStr"
        hasDefault="true" default="RDEFAULT_QSTRING"
        isConst="true" />
      </variant>
    </method>
    <method name="getLayoutId" cppName="getLayoutId"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="RLayout::Id" isPureVirtual="false">
        <arg type="QString &amp;" typeName="QString"
        name="layoutName" isConst="true" />
      </variant>
    </method>
    <method name="getBlockName" cppName="getBlockName"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QString" isPureVirtual="false">
        <arg type="RBlock::Id" typeName="RBlock::Id" name="blockId"
        isConst="false" />
      </variant>
    </method>
    <method name="getBlockNameFromLayout"
    cppName="getBlockNameFromLayout" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="QString" isPureVirtual="false">
        <arg type="QString &amp;" typeName="QString"
        name="layoutName" isConst="true" />
      </variant>
      <variant returnType="QString" isPureVirtual="false">
        <arg type="RLayout::Id" typeName="RLayout::Id"
        name="layoutId" isConst="false" />
      </variant>
    </method>
    <method name="getBlockNames" cppName="getBlockNames"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QSet &lt; QString &gt;"
      isPureVirtual="false">
        <arg type="QString &amp;" typeName="QString" name="rxStr"
        hasDefault="true" default="RDEFAULT_QSTRING"
        isConst="true" />
      </variant>
    </method>
    <method name="getBlockId" cppName="getBlockId"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="RBlock::Id" isPureVirtual="false">
        <arg type="QString &amp;" typeName="QString"
        name="blockName" isConst="true" />
      </variant>
    </method>
    <method name="getBlockIdAuto" cppName="getBlockIdAuto"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="RBlock::Id" isPureVirtual="false">
        <arg type="QString &amp;" typeName="QString"
        name="blockLayoutName" isConst="true" />
      </variant>
    </method>
    <method name="getViewName" cppName="getViewName"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QString" isPureVirtual="false">
        <arg type="RView::Id" typeName="RView::Id" name="viewId"
        isConst="false" />
      </variant>
    </method>
    <method name="getViewNames" cppName="getViewNames"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QSet &lt; QString &gt;"
      isPureVirtual="false" />
    </method>
    <method name="getViewId" cppName="getViewId" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="RView::Id" isPureVirtual="false">
        <arg type="QString &amp;" typeName="QString"
        name="viewName" isConst="true" />
      </variant>
    </method>
    <method name="getLinetypeName" cppName="getLinetypeName"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QString" isPureVirtual="false">
        <arg type="RLinetype::Id" typeName="RLinetype::Id"
        name="linetypeId" isConst="false" />
      </variant>
    </method>
    <method name="getLinetypeDescription"
    cppName="getLinetypeDescription" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="QString" isPureVirtual="false">
        <arg type="RLinetype::Id" typeName="RLinetype::Id"
        name="linetypeId" isConst="false" />
      </variant>
    </method>
    <method name="getLinetypeLabel" cppName="getLinetypeLabel"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QString" isPureVirtual="false">
        <arg type="RLinetype::Id" typeName="RLinetype::Id"
        name="linetypeId" isConst="false" />
      </variant>
    </method>
    <method name="getLinetypeNames" cppName="getLinetypeNames"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QSet &lt; QString &gt;"
      isPureVirtual="false" />
    </method>
    <method name="getLinetypePatterns"
    cppName="getLinetypePatterns" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="QList &lt; RLinetypePattern &gt;"
      isPureVirtual="false" />
    </method>
    <method name="getLinetypeId" cppName="getLinetypeId"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="RLinetype::Id" isPureVirtual="false">
        <arg type="QString &amp;" typeName="QString"
        name="linetypeName" isConst="true" />
      </variant>
    </method>
    <method name="queryObjectDirect" cppName="queryObjectDirect"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QSharedPointer &lt; RObject &gt;"
      isPureVirtual="false">
        <arg type="RObject::Id" typeName="RObject::Id"
        name="objectId" isConst="false" />
      </variant>
    </method>
    <method name="queryEntityDirect" cppName="queryEntityDirect"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QSharedPointer &lt; REntity &gt;"
      isPureVirtual="false">
        <arg type="REntity::Id" typeName="REntity::Id"
        name="objectId" isConst="false" />
      </variant>
    </method>
    <method name="queryVisibleEntityDirect"
    cppName="queryVisibleEntityDirect" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="QSharedPointer &lt; REntity &gt;"
      isPureVirtual="false">
        <arg type="REntity::Id" typeName="REntity::Id"
        name="objectId" isConst="false" />
      </variant>
    </method>
    <method name="queryUcsDirect" cppName="queryUcsDirect"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QSharedPointer &lt; RUcs &gt;"
      isPureVirtual="false">
        <arg type="RUcs::Id" typeName="RUcs::Id" name="ucsId"
        isConst="false" />
      </variant>
    </method>
    <method name="queryLayerDirect" cppName="queryLayerDirect"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QSharedPointer &lt; RLayer &gt;"
      isPureVirtual="false">
        <arg type="RLayer::Id" typeName="RLayer::Id" name="layerId"
        isConst="false" />
      </variant>
    </method>
    <method name="queryLayerStateDirect"
    cppName="queryLayerStateDirect" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="QSharedPointer &lt; RLayerState &gt;"
      isPureVirtual="false">
        <arg type="RLayerState::Id" typeName="RLayerState::Id"
        name="layerStateId" isConst="false" />
      </variant>
    </method>
    <method name="queryLayoutDirect" cppName="queryLayoutDirect"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QSharedPointer &lt; RLayout &gt;"
      isPureVirtual="false">
        <arg type="RLayout::Id" typeName="RLayout::Id"
        name="layoutId" isConst="false" />
      </variant>
    </method>
    <method name="setObjectHandle" cppName="setObjectHandle"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="RObject &amp;" typeName="RObject" name="object"
        isConst="false" />
        <arg type="RObject::Handle" typeName="RObject::Handle"
        name="objectHandle" isConst="false" />
      </variant>
    </method>
    <method name="getNewObjectHandle" cppName="getNewObjectHandle"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="RObject::Handle"
      isPureVirtual="false" />
    </method>
    <method name="setLastTransactionId"
    cppName="setLastTransactionId" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="int" typeName="int" name="transactionId"
        isConst="false" />
      </variant>
    </method>
    <method name="getMaxLineweight" cppName="getMaxLineweight"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="RLineweight::Lineweight"
      isPureVirtual="false" />
    </method>
    <method name="update" cppName="update" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false" />
    </method>
    <method name="setEntityParentId" cppName="setEntityParentId"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="REntity &amp;" typeName="REntity" name="entity"
        isConst="false" />
        <arg type="REntity::Id" typeName="REntity::Id"
        name="parentId" isConst="false" />
      </variant>
    </method>
  </class>
</unit>
