<?xml version="1.0"?>
<unit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:rs="http://www.ribbonsoft.com">
  <class_decl name="RDocument" />
  <class_decl name="RExporter" />
  <class name="RLeaderEntity"
  xsi:noNamespaceSchemaLocation="../class.xsd" isCopyable="false"
  hasShell="false" sharedPointerSupport="true" isQObject="false"
  hasStreamOperator="false" isAbstract="false" isScriptable="true">
    <baseClass name="REntity" specifier="public" />
    <constructor>
      <variant>
        <arg type="RDocument *" typeName="RDocument *"
        name="document" isConst="false" />
        <arg type="RLeaderData &amp;" typeName="RLeaderData"
        name="data" isConst="true" />
      </variant>
      <variant>
        <arg type="RLeaderEntity &amp;" typeName="RLeaderEntity"
        name="other" isConst="true" />
      </variant>
    </constructor>
    <method name="init" cppName="init" specifier="public"
    isStatic="true" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false" />
    </method>
    <method name="getStaticPropertyTypeIds"
    cppName="getStaticPropertyTypeIds" specifier="public"
    isStatic="true" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="QSet &lt; RPropertyTypeId &gt;"
      isPureVirtual="false" />
    </method>
    <method name="clone" cppName="clone" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="RLeaderEntity *"
      isPureVirtual="false" />
    </method>
    <method name="setProperty" cppName="setProperty"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false">
        <arg type="RPropertyTypeId" typeName="RPropertyTypeId"
        name="propertyTypeId" isConst="false" />
        <arg type="QVariant &amp;" typeName="QVariant" name="value"
        isConst="true" />
        <arg type="RTransaction *" typeName="RTransaction *"
        name="transaction" hasDefault="true" default="NULL"
        isConst="false" />
      </variant>
    </method>
    <method name="getProperty" cppName="getProperty"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QPair &lt; QVariant , RPropertyAttributes &gt;"
      isPureVirtual="false">
        <arg type="RPropertyTypeId &amp;"
        typeName="RPropertyTypeId" name="propertyTypeId"
        isConst="false" />
        <arg type="bool" typeName="bool" name="humanReadable"
        hasDefault="true" default="false" isConst="false" />
        <arg type="bool" typeName="bool" name="noAttributes"
        hasDefault="true" default="false" isConst="false" />
        <arg type="bool" typeName="bool" name="showOnRequest"
        hasDefault="true" default="false" isConst="false" />
      </variant>
    </method>
    <method name="getData" cppName="getData" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="RLeaderData &amp;"
      isPureVirtual="false" />
      <variant returnType="const RLeaderData &amp;"
      isPureVirtual="false" />
    </method>
    <method name="setData" cppName="setData" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="RLeaderData &amp;" typeName="RLeaderData"
        name="d" isConst="false" />
      </variant>
    </method>
    <method name="setArrowHead" cppName="setArrowHead"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="on"
        isConst="false" />
      </variant>
    </method>
    <method name="hasArrowHead" cppName="hasArrowHead"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="clear" cppName="clear" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false" />
    </method>
    <method name="normalize" cppName="normalize" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false" />
    </method>
    <method name="countVertices" cppName="countVertices"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="int" isPureVirtual="false" />
    </method>
    <method name="appendVertex" cppName="appendVertex"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="RVector &amp;" typeName="RVector" name="vertex"
        isConst="true" />
        <arg type="double" typeName="double" name="bulge"
        hasDefault="true" default="0.0" isConst="false" />
      </variant>
    </method>
    <method name="prependVertex" cppName="prependVertex"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="RVector &amp;" typeName="RVector" name="vertex"
        isConst="true" />
        <arg type="double" typeName="double" name="bulge"
        hasDefault="true" default="0.0" isConst="false" />
      </variant>
    </method>
    <method name="insertVertex" cppName="insertVertex"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="int" typeName="int" name="index"
        isConst="false" />
        <arg type="RVector &amp;" typeName="RVector" name="vertex"
        isConst="true" />
      </variant>
    </method>
    <method name="getVertexAt" cppName="getVertexAt"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="RVector" isPureVirtual="false">
        <arg type="int" typeName="int" name="i" isConst="false" />
      </variant>
    </method>
    <method name="setVertexAt" cppName="setVertexAt"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="int" typeName="int" name="i" isConst="false" />
        <arg type="RVector &amp;" typeName="RVector" name="v"
        isConst="true" />
      </variant>
    </method>
    <method name="removeLastVertex" cppName="removeLastVertex"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false" />
    </method>
    <method name="removeVertex" cppName="removeVertex"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="int" typeName="int" name="index"
        isConst="false" />
      </variant>
    </method>
    <method name="countSegments" cppName="countSegments"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="int" isPureVirtual="false" />
    </method>
    <method name="getSegmentAt" cppName="getSegmentAt"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="QSharedPointer &lt; RShape &gt;"
      isPureVirtual="false">
        <arg type="int" typeName="int" name="i" isConst="false" />
      </variant>
    </method>
    <method name="getBulgeAt" cppName="getBulgeAt"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="double" isPureVirtual="false">
        <arg type="int" typeName="int" name="i" isConst="false" />
      </variant>
    </method>
    <method name="setBulgeAt" cppName="setBulgeAt"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="int" typeName="int" name="i" isConst="false" />
        <arg type="double" typeName="double" name="b"
        isConst="false" />
      </variant>
    </method>
    <method name="getDirection1" cppName="getDirection1"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="double" isPureVirtual="false" />
    </method>
    <method name="getDirection2" cppName="getDirection2"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="double" isPureVirtual="false" />
    </method>
    <method name="getEndPoint" cppName="getEndPoint"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="RVector" isPureVirtual="false" />
    </method>
    <method name="getStartPoint" cppName="getStartPoint"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="RVector" isPureVirtual="false" />
    </method>
    <method name="setClosed" cppName="setClosed" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="on"
        isConst="false" />
      </variant>
    </method>
    <method name="isClosed" cppName="isClosed" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="getDimScale" cppName="getDimScale"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="double" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="fromDocument"
        hasDefault="true" default="true" isConst="false" />
      </variant>
    </method>
    <method name="getExploded" cppName="getExploded"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="QList &lt; QSharedPointer &lt; RShape &gt; &gt;"
      isPureVirtual="false" />
    </method>
    <method name="getDimLeaderBlockId"
    cppName="getDimLeaderBlockId" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="REntity::Id" isPureVirtual="false" />
    </method>
    <method name="setDimLeaderBlockId"
    cppName="setDimLeaderBlockId" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="REntity::Id" typeName="REntity::Id" name="id"
        isConst="false" />
      </variant>
    </method>
    <method name="exportEntity" cppName="exportEntity"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="RExporter &amp;" typeName="RExporter" name="e"
        isConst="false" />
        <arg type="bool" typeName="bool" name="preview"
        hasDefault="true" default="false" isConst="false" />
        <arg type="bool" typeName="bool" name="forceSelected"
        hasDefault="true" default="false" isConst="false" />
      </variant>
    </method>
    <method name="print" cppName="print" specifier="protected"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="QDebug" typeName="QDebug" name="dbg"
        isConst="false" />
      </variant>
    </method>
    <property name="PropertyCustom" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyHandle" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyProtected" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyWorkingSet" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyType" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyBlock" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyLayer" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyLinetype" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyLinetypeScale" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyLineweight" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyColor" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyDisplayedColor" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyDrawOrder" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyArrowHead" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyDimLeaderBlock" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyVertexNX" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyVertexNY" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyVertexNZ" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyDimScale" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
  </class>
</unit>
