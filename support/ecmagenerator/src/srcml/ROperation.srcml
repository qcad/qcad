<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C++" dir="./core" filename="ROperation.h"><comment type="block">/**
 * Copyright (c) 2011-2018 by Andrew Mustun. All rights reserved.
 * 
 * This file is part of the QCAD project.
 *
 * QCAD is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * QCAD is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with QCAD.
 */</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>ROPERATION_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>ROPERATION_H</name></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"core_global.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"RNonCopyable.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"RRequireHeap.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"RS.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"RTransaction.h"</cpp:file></cpp:include>

<class_decl>class <name>RDocument</name>;</class_decl>
<class_decl>class <name>RExporter</name>;</class_decl>



<comment type="block">/**
 * This abstract class is an interface for all operation implementations.
 * An operation encapsulates a modification that can be applied to a 
 * document. An implementing class might for example implement a move
 * operation that moves all selected entities by a given vector.
 * 
 * \ingroup core
 * \scriptable
 */</comment>
<class>class <macro><name>QCADCORE_EXPORT</name></macro> <name>ROperation</name> <super>: <specifier>public</specifier> <name>RRequireHeap</name>, <name>RNonCopyable</name></super> <block>{<private type="default">
</private><public>public:
    <constructor><name>ROperation</name><parameter_list>(
        <param><decl><type><name>bool</name></type> <name>undoable</name>=<init><expr><name>true</name></expr></init></decl></param>,
        <param><decl><type><name><name>RS</name>::<name>EntityType</name></name></type> <name>entityTypeFilter</name> =<init> <expr><name><name>RS</name>::<name>EntityAll</name></name></expr></init></decl></param>
    )</parameter_list> <member_list>: <call><name>transactionType</name><argument_list>(<argument><expr><name><name>RTransaction</name>::<name>Generic</name></name></expr></argument>)</argument_list></call>,
        <call><name>undoable</name><argument_list>(<argument><expr><name>undoable</name></expr></argument>)</argument_list></call>,
        <call><name>recordAffectedObjects</name><argument_list>(<argument><expr><name>true</name></expr></argument>)</argument_list></call>,
        <call><name>spatialIndexDisabled</name><argument_list>(<argument><expr><name>false</name></expr></argument>)</argument_list></call>,
        <call><name>allowInvisible</name><argument_list>(<argument><expr><name>false</name></expr></argument>)</argument_list></call>,
        <call><name>allowAll</name><argument_list>(<argument><expr><name>false</name></expr></argument>)</argument_list></call>,
        <call><name>entityTypeFilter</name><argument_list>(<argument><expr><name>entityTypeFilter</name></expr></argument>)</argument_list></call>,
        <call><name>transactionGroup</name><argument_list>(<argument><expr>-1</expr></argument>)</argument_list></call> </member_list><block>{
        <expr_stmt><expr><call><name><name>RDebug</name>::<name>incCounter</name></name><argument_list>(<argument><expr>"ROperation"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <destructor><specifier>virtual</specifier> <name>~ROperation</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>RDebug</name>::<name>decCounter</name></name><argument_list>(<argument><expr>"ROperation"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></destructor>
    
    <comment type="block">/**
     * Applies this operation to selection in the given document.
     * This is used for both previews and the actual apply. In case
     * of a preview, the given document is a temporary document with
     * a storage that is linked to the real document for realistic
     * condiditions for the preview.
     */</comment>
    <function_decl><type><name>virtual</name> <name>RTransaction</name></type> <name>apply</name><parameter_list>(<param><decl><type><name>RDocument</name>&amp;</type> <name>document</name></decl></param>, <param><decl><type><name>bool</name></type> <name>preview</name> =<init> <expr><name>false</name></expr></init></decl></param>)</parameter_list> <specifier>= 0</specifier>;</function_decl>

    <function><type><name><name>RS</name>::<name>EntityType</name></name></type> <name>getEntityTypeFilter</name><parameter_list>()</parameter_list> <specifier>const</specifier> <block>{
        <return>return <expr><name>entityTypeFilter</name></expr>;</return>
    }</block></function>

    <function><type><name>void</name></type> <name>setRecordAffectedObjects</name><parameter_list>(<param><decl><type><name>bool</name></type> <name>on</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name>recordAffectedObjects</name> = <name>on</name></expr>;</expr_stmt>
    }</block></function>

    <function><type><name>void</name></type> <name>setSpatialIndexDisabled</name><parameter_list>(<param><decl><type><name>bool</name></type> <name>on</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name>spatialIndexDisabled</name> = <name>on</name></expr>;</expr_stmt>
    }</block></function>

    <function><type><name>void</name></type> <name>setAllowInvisible</name><parameter_list>(<param><decl><type><name>bool</name></type> <name>on</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name>allowInvisible</name> = <name>on</name></expr>;</expr_stmt>
    }</block></function>

    <function><type><name>void</name></type> <name>setAllowAll</name><parameter_list>(<param><decl><type><name>bool</name></type> <name>on</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name>allowAll</name> = <name>on</name></expr>;</expr_stmt>
    }</block></function>

    <function><type><name>void</name></type> <name>setTransactionGroup</name><parameter_list>(<param><decl><type><name>int</name></type> <name>g</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name>transactionGroup</name> = <name>g</name></expr>;</expr_stmt>
    }</block></function>

    <function><type><name>int</name></type> <name>getTransactionGroup</name><parameter_list>()</parameter_list> <specifier>const</specifier> <block>{
        <return>return <expr><name>transactionGroup</name></expr>;</return>
    }</block></function>

    <function><type><name>void</name></type> <name>setText</name><parameter_list>(<param><decl><type><name>const</name> <name>QString</name>&amp;</type> <name>t</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name>text</name> = <name>t</name></expr>;</expr_stmt>
    }</block></function>

    <function><type><name>QString</name></type> <name>getText</name><parameter_list>()</parameter_list> <specifier>const</specifier> <block>{
        <return>return <expr><name>text</name></expr>;</return>
    }</block></function>

    <function><type><name>void</name></type> <name>setTransactionType</name><parameter_list>(<param><decl><type><name><name>RTransaction</name>::<name>Type</name></name></type> <name>t</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name>transactionType</name> = <name>t</name></expr>;</expr_stmt>
    }</block></function>

    <function><type><name><name>RTransaction</name>::<name>Type</name></name></type> <name>getTransactionType</name><parameter_list>()</parameter_list> <specifier>const</specifier> <block>{
        <return>return <expr><name>transactionType</name></expr>;</return>
    }</block></function>

</public><protected>protected:
    <decl_stmt><decl><type><name><name>RTransaction</name>::<name>Type</name></name></type> <name>transactionType</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>bool</name></type> <name>undoable</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>bool</name></type> <name>recordAffectedObjects</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>bool</name></type> <name>spatialIndexDisabled</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>bool</name></type> <name>allowInvisible</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>bool</name></type> <name>allowAll</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>RS</name>::<name>EntityType</name></name></type> <name>entityTypeFilter</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>transactionGroup</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QString</name></type> <name>text</name></decl>;</decl_stmt>
</protected>}</block>;</class>

<macro><name>Q_DECLARE_METATYPE</name><argument_list>(<argument>ROperation*</argument>)</argument_list></macro>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
